// <auto-generated />
using System;
using System.Collections.Generic;
using Gamification.Infrastructure.DatabaseService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gamification.Infrastructure.Migrations
{
    [DbContext(typeof(ProductivityDbContext))]
    [Migration("20250714135601_AnalysisTableFields")]
    partial class AnalysisTableFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Gamification.Infrastructure.Models.AnalysisResult", b =>
                {
                    b.Property<int>("AnalysisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("analysis_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnalysisId"));

                    b.PrimitiveCollection<List<string>>("Category")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("category");

                    b.Property<int>("IntrinsicScore")
                        .HasColumnType("integer")
                        .HasColumnName("intrinsic_score");

                    b.Property<float>("RelevanceScore")
                        .HasColumnType("real")
                        .HasColumnName("relevance_score");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer")
                        .HasColumnName("site_id");

                    b.Property<string>("UserGoal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_goal");

                    b.Property<DateTime>("VisitedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("visited_date");

                    b.HasKey("AnalysisId")
                        .HasName("pk_analysis_results");

                    b.HasIndex("SiteId")
                        .HasDatabaseName("ix_analysis_results_site_id");

                    b.ToTable("analysis_results", (string)null);
                });

            modelBuilder.Entity("Gamification.Infrastructure.Models.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("site_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SiteId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("SiteId")
                        .HasName("pk_sites");

                    b.ToTable("sites", (string)null);
                });

            modelBuilder.Entity("Gamification.Infrastructure.Models.AnalysisResult", b =>
                {
                    b.HasOne("Gamification.Infrastructure.Models.Site", "Site")
                        .WithMany("AnalysisResults")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_analysis_results_sites_site_id");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Gamification.Infrastructure.Models.Site", b =>
                {
                    b.Navigation("AnalysisResults");
                });
#pragma warning restore 612, 618
        }
    }
}
